


local ensure_packer = function()
  local fn = vim.fn
  local install_path = fn.stdpath('data')..'/site/pack/packer/start/packer.nvim'
  if fn.empty(fn.glob(install_path)) > 0 then
    fn.system({'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path})
    vim.cmd [[packadd packer.nvim]]
    return true
  end
  return false
end

local packer_bootstrap = ensure_packer()

vim.cmd([[
  augroup packer_user_config
    autocmd!
    autocmd BufWritePost plugins.lua source <afile> | PackerSync
  augroup end
]])

local packer = require("packer")

return packer.startup(function(use)

  use {"wbthomason/packer.nvim"}

  use {"folke/tokyonight.nvim"}

  use {
    "nvim-tree/nvim-tree.lua",
    requires = {
      "nvim-tree/nvim-web-devicons"
    }
  }

  use {
    'nvim-lualine/lualine.nvim',
    requires = {
      opt = true
    }
  }

  use {
    'akinsho/bufferline.nvim',
    tag = "v3.*",
    requires = 'nvim-tree/nvim-web-devicons'
  }

  use {"folke/which-key.nvim"}

  use {"windwp/nvim-autopairs"}

  use {"lewis6991/gitsigns.nvim"}

  use {"nvim-lua/plenary.nvim"}

  use {"ahmedkhalf/project.nvim"}

  use {'ojroques/nvim-bufdel'}

  use {
    "nvim-treesitter/nvim-treesitter",
    run = ":TSUpdate"
  }

  use {"christoomey/vim-tmux-navigator"}

  use {"szw/vim-maximizer"}

  use {"tpope/vim-surround"}

  use {"numToStr/Comment.nvim"}

  use {
    "nvim-telescope/telescope.nvim",
    tag = "0.1.1",
    requires = {
      "nvim-lua/plenary.nvim"
    }
  }

  use {
    'nvim-telescope/telescope-fzf-native.nvim',
    run = 'cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release && cmake --build build --config Release && cmake --install build --prefix build'
  }

  use {"goolord/alpha-nvim"}

  use {"lukas-reineke/indent-blankline.nvim"}

  -- Start configuring from here on out

  use {"neovim/nvim-lspconfig"}

  use {"hrsh7th/nvim-cmp"}

  use {"L3MON4D3/LuaSnip"}

  use {"saadparwaiz1/cmp_luasnip"}

  use {"hrsh7th/cmp-nvim-lsp"}

  use {"hrsh7th/cmp-buffer"}

  use {"hrsh7th/cmp-path"}

  use {"hrsh7th/cmp-cmdline"}



  if packer_bootstrap then
    require('packer').sync()
  end
end)
