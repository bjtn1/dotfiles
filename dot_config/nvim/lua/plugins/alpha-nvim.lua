local hk = {
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⢉⣉⡉⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠀⠀⠀⠀⢀⣤⠤⣤⡀⠀⠀⢠⡟⣡⡶⢦⠙⡆⠀⠀⠀⢀⣠⣤⣀⣀⣤⠴⠦⣄⣀⣀⣤⣀⡀⠀⠀⠀⣼⢡⡶⣶⡌⢷⠀⠀⠀⣠⡤⢤⣄⡀⠀⠀⠀⠀⢀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠟⢉⣉⡉⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢰⣿⠉⠿⢈⣷⡞⡩⣽⣛⣛⠛⠛⢋⣉⣭⠭⠭⢝⣛⠶⢏⡍⡟⣰⢺⡦⢹⡄⠀⠸⡇⢻⣧⣉⣴⠇⠀⠀⢰⡏⣤⢤⡉⡟⣑⣿⣿⡊⡟⢡⠤⣌⢻⠀⠀⠀⠻⣌⣡⣾⡇⣸⠀⠀⢰⡏⣶⡷⡌⡟⣍⡷⢶⣛⠩⠭⠭⣭⣉⡛⠛⢛⣛⣻⡭⢝⢶⣿⠀⠿⢙⣿⠄⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣄⡙⠷⠶⠿⠿⠷⠍⢚⣉⣤⠶⠚⠛⡏⢰⣒⢲⣶⣤⣌⣑⡚⠳⠘⠢⢴⣿⣄⣀⣀⣻⣆⡛⠷⣤⣤⣀⣀⣬⣷⡬⠜⠁⢧⢛⣻⣟⢃⠇⠘⠮⢥⣾⣄⣀⣠⣤⣤⠾⢋⣴⣏⣀⣀⣨⣷⡤⠔⠁⠟⢒⣉⣥⡤⣶⢖⣲⡄⣿⠙⠳⢦⣬⣙⠃⠩⠾⠿⠷⠶⠞⢋⣴⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠒⠒⠒⠛⠛⠉⠉⠀⠀⠀⠀⠙⠦⣥⠾⠁⠀⠀⠉⠙⠛⠲⠶⢦⣤⣬⣭⣉⣉⣉⣉⣀⣀⣀⣬⣤⣤⠴⠶⠾⣏⣣⡷⠭⠵⢾⣘⣹⠷⠶⢦⣤⣤⣄⣀⣀⣈⣉⣉⣉⣉⣭⣥⣤⠴⠶⠞⠛⠋⠉⠀⠀⠘⠦⣭⠶⠋⠀⠀⠀⠀⠉⠙⠛⠛⠒⠒⠚⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⣒⠒⠶⢒⣢⠀⠀⠀⢰⡒⠲⠶⣒⡆⠀⠀⠀⠀⣠⠶⠚⠛⠛⠛⠶⣤⡀⠀⠀⠀⣔⡒⠶⠖⣒⠀⠀⠀⠀⠀⣔⡒⠶⠖⣒⡄⠀⠀⠀⠀⠀⠀⣠⡴⠞⠛⠛⠛⠳⢦⡀⠀⠀⣔⡒⠶⠖⣒⡄⠀⠀⠀⣠⢢⡀⠀⠀⠀⣔⡒⠶⢒⡆⠀⠀⠀⠀⠀⠀⣖⠒⠶⠖⣲⠀⠀⣔⠲⠶⣒⡆⠀⣴⠛⣦⠀⠀⠀⠀⠀⠀⣒⠒⠶⢒⡆⠀⣖⠒⠶⢒⣢⠀⠀⠀⠀⣠⡴⠞⠛⠛⠛⠛⠳⠶⣄⠀⠀⣖⡒⠶⠖⣲⠀⠀⠀⢠⣒⠲⠶⢒⡆⢠⡞⠛⠳⠶⠶⠶⠶⠶⠶⠖⠒⡆⠀⠀",
  "⠀⠀⠀⢹⡇⠀⢸⠃⠀⠀⠀⠈⢿⠀⠀⣿⠀⠀⠀⢠⡞⢁⡴⠛⠛⠛⢷⣄⠈⠻⣆⠀⠀⠈⣷⠀⢸⡏⠀⠀⠀⠀⠀⠈⣿⠀⢸⡏⠀⠀⠀⠀⠀⢀⡼⠋⣴⠞⠛⠛⠳⣦⠀⠙⣦⠀⠈⢿⡀⠀⣿⠀⠀⠀⢠⡏⠈⣧⠀⠀⠀⢸⡇⢠⡟⠁⠀⠀⠀⠀⠀⠀⠘⣷⠀⢸⡏⠀⢠⡟⢀⡾⠋⠀⠀⣿⠀⠘⢧⡀⠀⠀⠀⠀⠙⣧⠀⣿⠁⠀⢹⡇⠀⣾⠃⠀⠀⢀⡾⠋⣴⠞⠛⠛⠛⠳⣄⠀⣿⠀⠀⠘⣷⠀⢸⡏⠀⠀⠀⠀⢹⡇⠀⣿⠁⢸⢇⡶⠶⠶⣶⠀⢰⡶⠶⣦⡀⡇⠀⠀",
  "⠀⠀⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⢸⠀⠀⣿⠀⠀⢠⡟⠀⡾⠁⠀⠀⠀⠀⠹⣆⠀⠹⡆⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢀⡾⠁⣼⠃⠀⠀⠀⠀⠈⣷⠀⠘⣧⠀⢸⡇⠀⢻⡀⠀⠀⣼⠃⠀⢹⡄⠀⠀⣸⠃⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⣠⠟⣠⡟⠁⠀⠀⠀⣿⠀⠀⠈⢷⡀⠀⠀⠀⠀⣿⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⢀⡾⠁⣼⠃⠀⠀⠀⠀⠀⢹⡇⣿⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢸⡇⠀⣿⠀⠈⠚⠁⠀⠀⣿⠀⢸⡇⠀⠘⠃⠃⠀⠀",
  "⠀⠀⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⢸⠀⠀⣿⠀⠀⣾⠀⢸⡇⠀⠀⠀⠀⠀⠀⢻⡄⠀⢿⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⣸⠃⢠⡏⠀⠀⠀⠀⠀⠀⠸⡇⠀⢹⡆⠀⣷⠀⢸⡇⠀⢠⡟⢰⡀⠸⣇⠀⠀⣿⢀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⣷⠏⣰⠏⠀⠀⠀⠀⠀⣿⠀⣧⡀⠈⢷⡄⠀⠀⠀⣿⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⣼⠃⢰⡏⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢸⡇⠀⣿⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⢸⡇⠀⠸⠶⠶⠶⠶⠶⠾⠀⠀⣿⠀⢰⡇⠀⣼⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⢸⡇⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⣿⠀⠘⡇⠀⢹⡄⠈⣷⠀⣸⠃⣿⡇⠀⢿⠀⢸⡇⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⠃⣼⠋⠀⠀⠀⠀⠀⠀⣿⠀⣿⢷⡀⠀⢻⡄⠀⠀⣿⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠸⠷⠶⠶⠶⠶⠾⠇⠀⣿⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⢸⡇⠀⢠⡤⠤⠤⠤⠤⣤⠀⠀⣿⠀⢸⡇⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⢸⡇⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⡇⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⡇⠀⠸⡇⠀⢻⣀⡿⢰⡏⣿⠀⠸⡇⣼⠁⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠻⣄⠀⠀⠀⠀⠀⠀⣿⠀⣿⠈⢷⡄⠀⠹⣆⠀⣿⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⡇⠀⢸⡇⠀⠀⠀⠀⢠⡶⠶⠶⢶⡆⠀⠀⣿⠀⢠⣤⠤⠤⠤⠤⣤⡄⠀⣿⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⢸⠀⠀⣿⠀⢸⡇⠀⢸⡆⠀⠀⠀⠀⠀⠀⢠⡏⠀⢸⠇⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⣧⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⣿⠀⢰⡇⠀⠀⣿⠀⢸⣿⠇⣾⠁⢸⡆⠀⣿⡿⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⣆⠀⠹⣆⠀⠀⠀⠀⠀⣿⠀⣿⠀⠀⢻⡄⠀⠹⣦⣿⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⣷⠀⢸⡇⠀⠀⠀⠀⠈⢻⡆⠀⣿⠁⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢸⡇⠀⣿⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⢸⠀⠀⣿⠀⠈⣧⠀⠘⣇⠀⠀⠀⠀⠀⠀⢸⡇⠀⣿⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢿⡀⠀⣷⠀⠀⠀⠀⠀⠀⢀⡿⠀⣼⠃⠀⠀⢸⡆⠀⡿⢰⡏⠀⠀⣷⠀⢸⡇⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⡿⣆⠀⠙⣧⠀⠀⠀⠀⣿⠀⣿⠀⠀⠀⠹⣆⠀⠘⣿⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⢻⡀⠀⢿⡀⠀⠀⠀⠀⢸⡇⠀⣿⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢸⡇⠀⣿⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀",
  "⠀⠀⠀⢸⡇⠀⢸⠀⠀⠀⠀⠀⢸⠀⠀⣿⠀⠀⢹⡄⠀⢻⡄⠀⠀⠀⠀⠀⣾⠀⣸⠇⠀⠀⣿⠀⢸⡇⠀⠀⢀⣀⡀⠀⣿⠀⢸⡇⠀⠀⢀⡀⡸⣧⠀⠸⣇⠀⠀⠀⠀⠀⣸⠇⢠⡏⠀⠀⠀⠘⣧⠀⠁⣼⠁⠀⠀⢹⡄⠈⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠙⣦⠀⠈⢷⡀⠀⠀⣿⠀⣿⠀⠀⠀⠀⠹⣦⠀⠈⠀⣿⠀⠀⢸⡇⠀⣿⠀⠀⠘⣧⠀⠘⣧⡀⠀⠀⠀⢸⡇⠀⣿⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⢸⡇⠀⣿⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀",
  '⠀⠀⠀⢸⡇⠀⢸⡆⠀⠀⠀⠀⣼⠀⠀⣿⠀⠀⠀⠻⣄⠀⠹⢦⣀⣀⣠⡾⢃⣴⠋⠀⠀⠀⣿⠀⠸⣧⣄⣠⣾⢹⡇⠀⣿⠀⠸⣧⣄⣠⣼⢱⡇⠙⣦⠀⠙⢷⣄⣀⣀⡴⠋⣰⠟⠀⠀⠀⠀⠀⢿⠀⢠⡟⠀⠀⠀⠈⣧⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡿⠀⢸⡇⠀⠘⢧⡀⠈⠻⣄⡀⣿⠀⢿⡀⠀⠀⠀⠀⠘⢧⡀⠀⣿⠀⠀⢸⡇⠀⢿⡀⠀⠀⠘⢧⡀⠈⠻⣦⣀⣀⣼⡇⠀⣿⠀⠀⢀⡿⠀⢸⡇⠀⠀⠀⠀⢸⡇⠀⣿⡀⠀⠀⠀⠀⢀⡏⠀⢸⡇⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⢞⣣⣤⣈⣛⠆⠀⠀⠰⣛⣠⣄⣙⡳⠀⠀⠀⠙⠷⣤⣀⣉⣉⣩⡴⠟⠁⠀⠀⠀⢸⣣⣤⣤⣄⣈⣉⣀⡼⠃⢸⣫⣤⣤⣄⣈⣉⣀⡼⠃⠀⠈⠳⣦⣀⣈⣉⣉⣴⠞⠁⠀⠀⠀⠀⠀⠀⠸⣇⣼⠃⠀⠀⠀⠀⢻⣄⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢞⣃⣤⣈⣛⠆⠀⠈⠻⣦⣄⣈⣛⣋⣤⣈⣛⠀⠀⠀⠀⠀⠈⢷⣄⡟⠀⠀⣟⣡⣤⣈⣻⠀⠀⠀⠈⠛⢦⣄⣀⣉⣉⣁⣤⠶⠃⠀⠀⢜⣃⣤⣈⣛⡆⠀⠀⠀⣟⣡⣤⣘⣻⠀⠀⠀⠀⢚⣃⣤⣈⣛⡆⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⢉⣉⣉⠙⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⢛⣉⡛⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⢠⡶⠒⢶⡴⠶⣛⣛⣛⣓⠶⢤⣴⢞⣫⣭⣭⣝⡳⣦⡤⠶⣚⣛⣛⣛⠶⢦⡶⠒⢶⡄⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⢛⣉⡛⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠋⣉⣉⡉⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⣾⡿⢿⣷⠀⣷⠀⢀⡤⠶⢦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⢰⣟⡟⢿⠆⣿⠀⠀⠀⠀⢀⣀⣠⣤⠴⠶⠚⣛⣋⣉⣭⣭⠭⠤⣤⣄⡨⢭⣭⣭⣙⡛⠛⠶⠶⣾⣦⣽⠇⣷⡙⣇⣒⣝⢿⣻⠳⢱⣿⣥⣤⣤⣬⣿⡎⠞⣟⡿⣫⣒⣸⢋⣾⠸⣯⣴⣷⠶⠶⠛⢛⣋⣭⣭⡭⢅⣠⣤⠤⠭⣭⣭⣉⣙⣛⠓⠶⠦⣤⣄⣀⡀⠀⠀⠀⠀⣿⠰⡿⢻⣻⡆⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡴⠶⢤⡀⠀⣾⠀⣾⡿⢿⣷⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⢻⣷⣄⣀⡴⠏⠀⣾⠰⣟⠗⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣌⠛⠿⠶⠶⠿⠶⠶⠚⣛⣉⣭⣥⣤⣤⣤⣬⣍⣙⠿⡿⢠⡞⢷⠀⣿⠻⣦⠹⣇⠉⠙⠳⣌⠻⣶⣶⠶⢛⡫⠭⢾⣽⣛⣳⣶⢇⣭⠷⠶⠶⠶⠶⠾⣭⡸⣶⣞⣛⣯⡷⠭⢝⡛⠶⣶⣶⠟⣡⠞⠋⠉⣸⠏⣴⠟⣿⠀⡾⢳⡄⢿⠿⣋⣩⣥⣤⣤⣤⣬⣭⣉⣛⠓⠶⠶⠿⠶⠶⠿⠛⣡⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠺⣻⠆⣷⠀⠹⢦⣀⣠⣾⡟⢀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⡙⠻⠷⠤⣤⣤⣼⣧⣝⡻⠷⠶⠦⠤⠴⠶⠶⠶⠞⠛⣛⣉⣭⡍⢲⠆⣠⠶⢿⡛⠉⠁⠀⠀⠀⠀⠀⡼⢛⡻⣷⠘⣌⡻⠶⠾⠿⠚⠛⠀⠛⠓⠶⠶⢼⣷⠈⢿⣦⡻⢄⣏⣷⣝⡻⠵⢹⢸⣧⣤⠤⠤⠤⠤⣤⣼⡇⡏⠮⢟⣫⣾⣹⡸⢟⣴⡿⠁⣾⡧⠶⠶⠚⠛⠀⠛⠓⠿⠷⠶⢟⣡⠃⣾⢟⡛⢧⠀⠀⠀⠀⠀⠈⠉⢛⡿⠶⣄⠰⡖⢩⣭⣉⣛⠛⠳⠶⠶⠶⠦⠤⠴⠶⠾⢟⣫⣼⣧⣤⣤⠤⠾⠟⢋⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠓⠶⠶⠶⠤⣤⣤⣤⣤⣤⣤⠴⠶⠶⠶⠖⠛⠛⠋⠉⠉⠳⣤⠾⣆⡛⠛⣸⠇⠀⠀⠀⠀⠀⠀⠈⣧⠹⢷⠿⢀⡿⢋⡵⢶⣟⠛⠋⠉⠛⢻⡿⠒⠒⢮⣤⣘⡻⠿⣷⣮⣽⣛⣛⣿⣿⣰⡶⠛⠛⠛⠛⠛⠛⢶⢆⣿⣿⣛⣛⣯⣵⣾⠿⢟⣃⣤⡵⠒⠒⢿⡟⠛⠉⠙⠛⣻⡶⢮⡙⢿⡀⠿⡾⠏⣼⠁⠀⠀⠀⠀⠀⠀⠸⣇⠛⢛⣰⠷⣤⠞⠉⠉⠙⠛⠛⠲⠶⠶⠶⠦⣤⣤⣤⣤⣤⣤⠤⠶⠶⠶⠚⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠲⠖⢿⡁⣯⡰⣦⢹⡆⠀⠀⠀⣿⠠⣾⠻⢀⡟⠉⣿⢀⣶⠛⣽⡹⢻⣝⣢⣇⠿⢦⣤⣤⣤⣤⡴⠿⣼⣐⣫⡟⢗⣯⠻⣶⡀⣿⠉⢻⡀⠟⣷⠄⣿⠀⠀⠀⢰⡏⣴⢆⣽⢈⡿⠲⠖⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣬⣭⣥⠞⠁⠀⠀⠀⠹⣦⣙⣛⣛⣛⣛⣋⣚⣛⣛⠒⠪⠭⢽⣾⣿⣆⠳⣶⣶⣶⣶⠞⣰⣿⣷⡯⠭⠕⠒⣛⣛⣓⣙⣛⣛⣛⣛⣋⣴⠏⠀⠀⠀⠈⠳⣬⣭⣥⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⢿⡪⣻⠛⣿⢗⣂⣙⠻⣷⣦⡭⢭⣴⣾⠟⣋⣐⡺⣿⠛⣟⢕⡿⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⢻⣘⠞⣸⣷⡙⣇⣚⣓⣸⢋⣾⣇⠳⣃⡟⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⣏⠾⢣⣏⠭⠭⣹⡜⠷⣹⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢻⡷⢮⢻⡟⡵⢾⡟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⣉⢾⡷⣉⡼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣏⣹⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
  '⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
}

return {
  'goolord/alpha-nvim',
  dependencies = 'nvim-tree/nvim-web-devicons',
  config = function()
    local alpha = require('alpha')
    local db = require('alpha.themes.dashboard')

    db.section.header.val = hk

    db.section.buttons.val = {
      db.button("f", "Find file", "<CMD>Telescope find_files<CR>"),
      db.button("n", "New file", "<CMD>ene!<CR>"),
      db.button("r", "Recent files", "<CMD>Telescope oldfiles <CR>"),
      db.button("c", "Configuration", "<CMD>edit /Users/bnog/.config/nvim/init.lua<CR>"),
      db.button("q", "Quit", "<CMD>quit<CR>")
    }

    db.section.header.opts = {
      hl = "",
    }

    alpha.setup(db.config)
  end
}

