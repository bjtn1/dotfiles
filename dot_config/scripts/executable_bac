#!/usr/bin/env bash

set -euo pipefail

CONFIG_DIR="$HOME/.config"
CACHE_DIR="$HOME/.cache"
CHEZMOI_CONFIG_DIR="$HOME/.local/share/chezmoi/dot_config"
CHEZMOI_CACHE_DIR="$HOME/.local/share/chezmoi/dot_cache"

backup_packages() {
  echo "üì¶ Backing up packages..."

  case "$(uname)" in
    Darwin)
      brew bundle dump -f --file="$CONFIG_DIR/brewfile.txt"
      echo "‚úÖ Homebrew packages saved to $CONFIG_DIR/brewfile.txt"
      if command -v chezmoi >/dev/null; then
        chezmoi add "$CONFIG_DIR/brewfile.txt"
      fi
      ;;
    Linux)
      if [ -f /etc/os-release ]; then
        source /etc/os-release
        DISTRO="${ID,,}"  # lowercase distro name
      else
        DISTRO="linux"
      fi

      # I don't use pacman bruh
      # if command -v pacman >/dev/null; then
      #   pacman -Qqe > "$CONFIG_DIR/${DISTRO}_pacman_packages.txt"
      #   echo "‚úÖ Pacman packages saved to $CONFIG_DIR/${DISTRO}_pacman_packages.txt"
      #   if command -v chezmoi >/dev/null; then
      #     chezmoi add "$CONFIG_DIR/${DISTRO}_pacman_packages.txt"
      #   fi
      #   echo "=============================================================================================================================================================================="
      # fi

      if command -v yay >/dev/null; then
        yay -Qqe > "$CONFIG_DIR/${DISTRO}_yay_packages.txt"
        echo "‚úÖ Yay packages saved to $CONFIG_DIR/${DISTRO}_yay_packages.txt"
        if command -v chezmoi >/dev/null; then
          chezmoi add "$CONFIG_DIR/${DISTRO}_yay_packages.txt"
        fi
        echo "=============================================================================================================================================================================="
      fi
      ;;
    *)
      echo "‚ùå Unsupported OS"
      exit 1
      ;;
  esac
}

backup_configs() {
  echo
  echo "üì¶ Backing up configs..."

  # List of directories to back up (relative to $CONFIG_DIR)
  declare -a config_dirs=(
    "$CONFIG_DIR/bat"
    "$CONFIG_DIR/btop"
    "$CONFIG_DIR/dunst"
    "$CONFIG_DIR/fish"
    "$CONFIG_DIR/grub-themes"
    "$CONFIG_DIR/hypr"
    "$CONFIG_DIR/kitty"
    "$CONFIG_DIR/nvim"
    "$CONFIG_DIR/nwg-look"
    "$CONFIG_DIR/rofi"
    "$CONFIG_DIR/scripts"
    "$CONFIG_DIR/swaync"
    "$CONFIG_DIR/tmux"
    "$CONFIG_DIR/waybar"
    "$CONFIG_DIR/yazi"
    "$CONFIG_DIR/waypaper"
    "$CONFIG_DIR/fastfetch"
    "$CONFIG_DIR/wlogout"
  )

  declare -a cache_dirs=(
    "$CACHE_DIR"/wal
  )

  # Prompt for wallpapers directory
  read -p "Re-add ~/.config/wallpapers? [y/N] " answer
  if [[ "$answer" =~ ^[Yy]$ ]]; then
    config_dirs+=("$CONFIG_DIR/wallpapers")
  fi

  # Remove and back up config dirs
  for config_dir in "${config_dirs[@]}"; do
    # Replace config_dir with chezmoi_dir string
    chezmoi_config_dir="${config_dir/$CONFIG_DIR/$CHEZMOI_CONFIG_DIR}"
    echo "üóëÔ∏è Removing $chezmoi_config_dir..."
    rm -rf "$chezmoi_config_dir" || chezmoi add "$config_dir"
    echo "üíæ Backing up $config_dir..."
    chezmoi add "$config_dir" || echo "‚ö†Ô∏è Failed to back up $config_dir"
    echo "=============================================================================================================================================================================="
  done

  # Remove and back up cache dirs
  for cache_dir in "${cache_dirs[@]}"; do
    # Replace config_dir with chezmoi_dir string
    chezmoi_cache_dir="${cache_dir/$CACHE_DIR/$CHEZMOI_CACHE_DIR}"
    echo "üóëÔ∏è Removing $chezmoi_cache_dir..."
    rm -rf "$chezmoi_cache_dir" || chezmoi add "$cache_dir"
    echo "üíæ Backing up $config_dir..."
    chezmoi add "$cache_dir" || echo "‚ö†Ô∏è Failed to back up $cache_dir"
    echo "=============================================================================================================================================================================="
  done

  # Run chezmoi re-add if chezmoi is available
  if command -v chezmoi >/dev/null; then
    echo "‚è∞ Chezmoi re-adding files..."
    chezmoi re-add || echo "‚ö†Ô∏è Failed to run chezmoi re-add"
  else
    echo "‚ö†Ô∏è chezmoi not found, skipping re-add"
  fi
}

show_help() {
  cat <<EOF
  Usage: $0 [OPTION]

  Backup system packages and configuration files.

  Options:
  -p, --packages    Backup installed packages only
  -c, --configs     Backup configuration files only
  -a, --all         Backup both packages and configs (default)
  -h, --help        Show this help message

  Examples:
  $0 -p             Backup only packages
  $0 --configs      Backup only config files
  $0                Backup everything (default action)
EOF
}

main() {
  # Parse options
  while [ $# -gt 0 ]; do
    case "$1" in
      -p|--packages)
        local do_packages=true
        shift
        ;;
      -c|--configs)
        local do_configs=true
        shift
        ;;
      -a|--all)
        local do_packages=true
        local do_configs=true
        shift
        ;;
      -h|--help)
        show_help
        exit 0
        ;;
      *)
        echo "‚ùå Invalid option: $1"
        show_help
        exit 1
        ;;
    esac
  done

  # Default to all if no specific options provided
  if [[ -z ${do_packages:-} && -z ${do_configs:-} ]]; then
    local do_packages=true
    local do_configs=true
  fi

  # Execute requested actions
  if [[ ${do_packages:-} == true ]]; then
    backup_packages
  fi

  if [[ ${do_configs:-} == true ]]; then
    backup_configs
  fi
}

main "$@"
