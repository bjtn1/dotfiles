# test
# Instructions on downloading a cli monkey-type clone
# mkdir -p /usr/local/bin /usr/local/share/man/man1 # Usually created by brew
#
# sudo curl -L https://github.com/lemnos/tt/releases/download/v0.4.2/tt-osx -o /usr/local/bin/tt && sudo chmod +x /usr/local/bin/tt
# sudo curl -o /usr/local/share/man/man1/tt.1.gz -L https://github.com/lemnos/tt/releases/download/v0.4.2/tt.1.gz
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/sbin:$PATH"
export PATH="/Users/bjtn/.local/bin:$PATH"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="/opt/homebrew/opt/gawk/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/make/libexec/gnubin:$PATH"

# C compiler
get_latest_gcc() {
  local gcc_path
  gcc_path=$(echo "$(brew --prefix)/Cellar/gcc/"* | xargs -n 1 | tail -n 1)
  gcc_path=$(echo "$gcc_path/bin/"* | xargs -n 1 | rg 'aarch64-apple-darwin23-gcc-[0-9][0-9]')
  echo "$gcc_path"
}
export CC=$(get_latest_gcc)
alias cdgcc="cd /opt/homebrew/Cellar/gcc"

export LDFLAGS="-L/opt/homebrew/opt/ruby/lib"
export CPPFLAGS="-I/opt/homebrew/opt/ruby/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby/lib/pkgconfig"

export EDITOR="nvim"
export VISUAL="nvim"
export HISTSIZE=10000
export SAVEHIST=10000
export GECKODRIVER_PATH="/Users/bjtn/geckodriver"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

unset zle_bracketed_paste

autoload -U compinit; compinit

alias ip='ipconfig getifaddr en0'

alias path='echo $PATH | tr ":" "\n"'

alias activate="source bin/activate"

# This is the alias used to run the pogocal thingie I made
alias pogocal="cd ~/Workspace/pogocal/ && py src/pogocal.py"

alias icd="cd ~/Library/Mobile\ Documents/com~apple~CloudDocs/"

alias lg="lazygit"

alias e="exit"

alias nv="nvim"

alias lv="lvim"

alias cl="clear"

alias cat="bat"

alias z="zoxide"

alias unzipall='find . -name "*.zip" -exec unzip -v {} \;'

alias rmdsstore="find . -type f -name ".DS_Store" -exec rm -rf {} \;"

# alias bakobs="rsync ~/Movies/obs/ /Volumes/B/final-cut-pro/obs -Pavz && mv ~/Movies/obs/* ~/.Trash/"
alias bakobs="mv -v ~/Movies/obs/*.mp4 /Volumes/B/obs && rm -rfv ~/Movies/obs/*.mkv"

# Taken from here:
# https://github.com/Homebrew/actions/blob/7657c9512f50e1c35b640971116425935bab3eea/setup-homebrew/main.sh#L17
ohai() {
  echo -e "\\033[34m==>\\033[0m \\033[1m$*\\033[0m"
}

# Use ncdu instead of du -sh
alias du-sh="ncdu"

# Backup epubs


# Most important alias
alias update=' \
ohai "Updating LunarVim..." && \
lvim +LvimUpdate +q && \
ohai "Running brew update..." && \
brew update --verbose && \
ohai "Running brew upgrade..." && \
brew upgrade --greedy --verbose && \
ohai "Running brew cleanup..." && \
brew cleanup --prune=all -s --verbose && \
ohai "Running brew autoremove..." && \
brew autoremove --verbose && \
echo "" > ~/.config/brewfile && \
ohai "Running brew bundle dump..." && \
brew bundle dump -f --file=~/.config/brewfile && \
ohai "Running brew reinstall python..." && \
brew reinstall python && \
ohai "Running brew reinstall python-tk..." && \
brew reinstall python-tk && \
ohai "Running brew reinstall python-certifi..." && \
brew reinstall certifi && \
ohai "Running brew reinstall python-gdbm..." && \
brew reinstall python-gdbm && \
ohai "Running brew reinstall --cask librewolf --no-quarantine..." && \
brew reinstall --cask librewolf --no-quarantine && \
ohai "Running chezmoi add ~/.config/lvim/*" && \
rm -rf ~/.local/share/chezmoi/dot_config/lvim && \
chezmoi add ~/.config/lvim/* && \
ohai "Running chezmoi add ~/.config/nvim/*" && \
rm -rf ~/.local/share/chezmoi/dot_config/nvim && \
chezmoi add ~/.config/nvim/* && \
ohai "Running chezmoi add ~/.config/tmux/*" && \
rm -rf ~/.local/share/chezmoi/dot_config/tmux/ && \
chezmoi add ~/.config/tmux/* && \
ohai "Running chezmoi add ~/.config/brewfile" && \
rm ~/.local/share/chezmoi/dot_config/brewfile && \
chezmoi add ~/.config/brewfile && \
ohai "Running chezmoi add ~/.zshrc" && \
rm ~/.local/share/chezmoi/dot_zshrc && \
chezmoi add ~/.zshrc && \
ohai "Running chezmoi add ~/Pictures/wallpapers/" && \
rm -rf ~/.local/share/chezmoi/private_Pictures && \
chezmoi add ~/Pictures/wallpapers/ && \
ohai "Running chezmoi add ~/.config/iterm2/themes/" && \
rm -rf ~/.local/share/chezmoi/dot_config/iterm2/themes/ && \
chezmoi add ~/.config/iterm2/themes/ && \
ohai "Running rustup update..." && \
rustup update && \
ohai "Running brew cleanup..." && \
brew cleanup --prune=all -s --verbose && \
ohai "Running brew autoremove..." && \
brew autoremove --verbose \
'
alias u="update"

# Chezmoi
alias cm="chezmoi"
alias cmcd="chezmoi cd"

# Tmux
alias tm="tmux"
alias tmn="tmux new"
alias tma="tmux attach"
alias tml="tmux ls"
alias tmd="tmux detach"
alias tmk="tmux kill-session"

# To quickly edit zshrc and zshenv from anywhere
alias zshrc="nvim ~/.zshrc"
alias zshenv="nvim ~/.zshenv"

# Python
alias py="python3"
alias pip="pip3"

# This is the file organizer I created
alias al="py /Users/bnog/Workspace/al/src/main.py"

# ls
# alias l="ls -lah"
# alias ls="ls -lh --color=auto"

# eza (cooler ls)
alias l="eza --oneline --long --all --header --git --git-repos --classify=always --icons=always --group-directories-first --no-quotes --hyperlink --group"

# Git
alias gs='git status'
alias ga='git add'
alias gp='git push'
alias gpo='git push origin'
alias gtd='git tag --delete'
alias gtdr='git tag --delete origin'
alias gr='git branch -r'
alias gplo='git pull origin'
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gco='git checkout '
alias gl='git log'
alias gr='git remote'
alias grs='git remote show'
alias glo='git log --pretty="oneline"'
alias glol='git log --graph --oneline --decorate'
alias gitpwd='git rev-parse --abbrev-ref HEAD'

zmodload zsh/complist

source $(brew --prefix)/opt/zsh-fast-syntax-highlighting/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /opt/homebrew/opt/powerlevel10k/share/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

eval "$(zoxide init --cmd cd zsh)"
